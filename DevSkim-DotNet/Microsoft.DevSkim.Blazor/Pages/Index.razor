@page "/"
@using System.IO;
@using Tewr.Blazor.FileReader;
@using Microsoft.CST.OpenSource.RecursiveExtractor;
@using Microsoft.DevSkim.CLI.Commands;
@inject IFileReaderService fileReaderService;


<input type="file" @ref=inputTypeFileElement />
<button @onclick=ReadFile>Read file</button>

@functions {
    ElementReference inputTypeFileElement;
    Extractor extractor = new Extractor(new ExtractorOptions() { EnableTiming = false, ExtractSelfOnFail = false });

    public async Task ReadFile()
    {
        var fileEntries = new List<FileEntry>();
        foreach (var file in await fileReaderService.CreateReference(inputTypeFileElement).EnumerateFilesAsync())
        {
            var info = await file.ReadFileInfoAsync();
            using var stream = await file.OpenReadAsync();
            var streamEntries = extractor.ExtractStream(info.Name, stream, true);
            fileEntries.AddRange(streamEntries);
        }

        var cmd = new AnalyzeCommand(".", ".", "sarif", "", severities: new List<string>(), rules: new List<string>(),
            ignoreDefault: true, suppressError: true, disableSuppression: true, crawlArchives: true);
        using var ms = new MemoryStream();
        using var writer = new StreamWriter(ms);
        cmd.RunFileEntries(fileEntries, writer);

        using var reader = new StreamReader(ms);
        // Write results to storage

        foreach (var entry in fileEntries)
        {
            // Save to storage
        }
    }
}