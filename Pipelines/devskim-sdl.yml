# Azure Pipelines
# https://aka.ms/yaml

name: DevSkim_VisualStudio_SDL_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
schedules:
  - cron: "24 2 * * *"
    displayName: Daily SDL Build (if changed)
    branches:
      include:
      - master

stages:
- stage: Publish
  jobs:
  - job: sdl
  displayName: SDL Tools
  dependsOn: hashes
  condition: and(succeeded(), eq(variables['RunSDL'], 'TRUE'))
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: DotNetCoreCLI@2
    displayName: CLI Build
    inputs:
      command: 'build'
      arguments: 'Microsoft.DevSkim.CLI -c Release -o $(Build.StagingDirectory) /p:DebugType=Full'
      workingDirectory: '$(SolutionDirectory)'
  - task: MSBuild@1
    displayName: Build Extension
    inputs:
      solution: '$(SolutionDirectory)/Microsoft.DevSkim.VSExtension'
      msbuildArguments: '/p:Configuration=$(BuildConfiguration) /p:OutputPath=$(Build.StagingDirectory) /p:DebugType=Full'
  - task: Npm@1
    displayName: npm install
    inputs:
      command: 'install'
      workingDir: '$(SolutionDirectory)'
  - task: Npm@1
    inputs:
      command: 'pack-ext'
      workingDir: '$(SolutionDirectory)'
  - task: AntiMalware@3
    displayName: Anti-Malware Scan
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(SolutionDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - task: AntiMalware@3
    displayName: Anti-Malware Scan
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.StagingDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - task: AntiMalware@3
    displayName: Anti-Malware Scan
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.StagingDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Governance
    inputs:
      scanType: 'Register'
      verbosity: 'Verbose'
      alertWarningLevel: 'Low'
  - task: notice@0
    displayName: Notice File Generator
    inputs:
      outputformat: 'text'
    continueOnError: true
  - task: PoliCheck@1
    displayName: PoliCheck
    inputs:
      inputType: 'Basic'
      targetType: 'F'
      targetArgument: '$(SolutionDirectory)'
      result: 'PoliCheck.xml'
  - task: BinSkim@3
    displayName: BinSkim
    inputs:
      InputType: 'CommandLine'
    continueOnError: true
  - task: Semmle@0
    displayName: Semmle Scan
    inputs:
      sourceCodeDirectory: '$(SolutionDirectory)'
      language: 'csharp'
      cleanupBuildCommands: 'dotnet clean Microsoft.DevSkim.CLI -c Release'
      buildCommands: 'dotnet build Microsoft.DevSkim.CLI -c Release'
      querySuite: 'Recommended'
      timeout: '1800'
      ram: '16384'
      addProjectDirToScanningExclusionList: true
    continueOnError: true
  - task: Semmle@0
    displayName: Semmle Scan
    inputs:
      sourceCodeDirectory: '$(SolutionDirectory)'
      language: 'csharp'
      cleanupBuildCommands: 'msbuild Microsoft.DevSkim.VSExtension /p:Configuration=$(BuildConfiguration) /t:Clean'
      buildCommands: 'msbuild Microsoft.DevSkim.VSExtension /p:Configuration=$(BuildConfiguration) /p:DebugType=Full'
      querySuite: 'Recommended'
      timeout: '1800'
      ram: '16384'
      addProjectDirToScanningExclusionList: true
    continueOnError: true
  - task: Semmle@0
    displayName: Semmle Scan
    inputs:
      sourceCodeDirectory: '$(SolutionDirectory)'
      language: 'javascript'
      cleanupBuildCommands: 'npm run clean'
      buildCommands: 'npm install && npm run pack-ext'
      querySuite: 'Recommended'
      timeout: '1800'
      ram: '16384'
      addProjectDirToScanningExclusionList: true
    continueOnError: true
  - task: PublishPipelineArtifact@1
    displayName: Publish PoliCheck Result
    inputs:
      targetPath: '$(Pipeline.Workspace)\_sdt\logs\PoliCheck\PoliCheck.xml'
      artifact: 'PoliCheck.xml'
  - task: PublishPipelineArtifact@1
    displayName: Publish BinSkim Result
    inputs:
      targetPath: '$(Pipeline.Workspace)\_sdt\logs\BinSkim\BinSkim.sarif'
      artifact: 'BinSkim.sarif'
    continueOnError: true
  - task: PublishPipelineArtifact@1
    displayName: Publish Semmle Result
    inputs:
      targetPath: '$(Pipeline.Workspace)\_sdt\logs\Semmle\'
      artifact: 'Semmle'
    continueOnError: true