@page "/viewcode/{CodePath}/{RunId}"
@using Microsoft.CodeAnalysis.Sarif;
@using System.Text;
@inject Blazored.LocalStorage.ILocalStorageService localStorage;

<code class="language-@Language">
    @Code
</code>

@code {
    protected override void OnParametersSet()
    {
        //the param will be set now
        var test = RunId;
    }
    [Parameter]
    public string RunId { get; set; }

    [Parameter]
    public string CodePath { get; set; }

    public string Code { get; set; }

    public string Language { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var results = await localStorage.GetItemAsync<Results>("DevSkimResults");
        if (results != null)
        {
            if (results.RunIds.Contains(RunId))
            {
                var key = $"DevSkim-{RunId}-Code:{CodePath}";
                Code = await localStorage.GetItemAsStringAsync(key);
                Language = Microsoft.DevSkim.Language.FromFileName(CodePath);

                key = $"DevSkim-{RunId}-Results";
                var Results = await localStorage.GetItemAsStringAsync(key);
                var sarifStream = new System.IO.MemoryStream(Encoding.UTF8.GetBytes(Results));
                var log = SarifLog.Load(sarifStream);
                var runs = log.Runs;
                var result = runs.First().Results.First();
                Code = await localStorage.GetItemAsStringAsync(results.FileLocations[RunId][result.AnalysisTarget.Uri.OriginalString]);
            }
        }
    }
}
